package expo.modules.updates;

import java.lang.System;

/**
 * Interface implemented by the [UpdatesService] internal module and used by [UpdatesModule] to
 * search for the correct internal module in the registry.
 */
@kotlin.Metadata(mv = {1, 8, 0}, k = 1, d1 = {"\u0000h\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0010\u000b\n\u0002\b\u0006\n\u0002\u0010$\n\u0002\u0018\u0002\n\u0002\u0010\u000e\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\bf\u0018\u00002\u00020\u0001J\b\u0010+\u001a\u00020\u0017H&J\u0010\u0010,\u001a\u00020-2\u0006\u0010.\u001a\u00020/H&J\b\u00100\u001a\u00020-H&R\u0012\u0010\u0002\u001a\u00020\u0003X\u00a6\u0004\u00a2\u0006\u0006\u001a\u0004\b\u0004\u0010\u0005R\u0012\u0010\u0006\u001a\u00020\u0007X\u00a6\u0004\u00a2\u0006\u0006\u001a\u0004\b\b\u0010\tR\u0014\u0010\n\u001a\u0004\u0018\u00010\u000bX\u00a6\u0004\u00a2\u0006\u0006\u001a\u0004\b\f\u0010\rR\u0014\u0010\u000e\u001a\u0004\u0018\u00010\u000fX\u00a6\u0004\u00a2\u0006\u0006\u001a\u0004\b\u0010\u0010\u0011R\u0012\u0010\u0012\u001a\u00020\u0013X\u00a6\u0004\u00a2\u0006\u0006\u001a\u0004\b\u0014\u0010\u0015R\u0012\u0010\u0016\u001a\u00020\u0017X\u00a6\u0004\u00a2\u0006\u0006\u001a\u0004\b\u0016\u0010\u0018R\u0012\u0010\u0019\u001a\u00020\u0017X\u00a6\u0004\u00a2\u0006\u0006\u001a\u0004\b\u0019\u0010\u0018R\u0012\u0010\u001a\u001a\u00020\u0017X\u00a6\u0004\u00a2\u0006\u0006\u001a\u0004\b\u001a\u0010\u0018R\u0014\u0010\u001b\u001a\u0004\u0018\u00010\u000fX\u00a6\u0004\u00a2\u0006\u0006\u001a\u0004\b\u001c\u0010\u0011R \u0010\u001d\u001a\u0010\u0012\u0004\u0012\u00020\u001f\u0012\u0004\u0012\u00020 \u0018\u00010\u001eX\u00a6\u0004\u00a2\u0006\u0006\u001a\u0004\b!\u0010\"R\u0012\u0010#\u001a\u00020$X\u00a6\u0004\u00a2\u0006\u0006\u001a\u0004\b%\u0010&R\u0014\u0010\'\u001a\u0004\u0018\u00010(X\u00a6\u0004\u00a2\u0006\u0006\u001a\u0004\b)\u0010*\u00a8\u00061"}, d2 = {"Lexpo/modules/updates/UpdatesInterface;", "", "configuration", "Lexpo/modules/updates/UpdatesConfiguration;", "getConfiguration", "()Lexpo/modules/updates/UpdatesConfiguration;", "databaseHolder", "Lexpo/modules/updates/db/DatabaseHolder;", "getDatabaseHolder", "()Lexpo/modules/updates/db/DatabaseHolder;", "directory", "Ljava/io/File;", "getDirectory", "()Ljava/io/File;", "embeddedUpdate", "Lexpo/modules/updates/db/entity/UpdateEntity;", "getEmbeddedUpdate", "()Lexpo/modules/updates/db/entity/UpdateEntity;", "fileDownloader", "Lexpo/modules/updates/loader/FileDownloader;", "getFileDownloader", "()Lexpo/modules/updates/loader/FileDownloader;", "isEmbeddedLaunch", "", "()Z", "isEmergencyLaunch", "isUsingEmbeddedAssets", "launchedUpdate", "getLaunchedUpdate", "localAssetFiles", "", "Lexpo/modules/updates/db/entity/AssetEntity;", "", "getLocalAssetFiles", "()Ljava/util/Map;", "selectionPolicy", "Lexpo/modules/updates/selectionpolicy/SelectionPolicy;", "getSelectionPolicy", "()Lexpo/modules/updates/selectionpolicy/SelectionPolicy;", "stateMachine", "Lexpo/modules/updates/statemachine/UpdatesStateMachine;", "getStateMachine", "()Lexpo/modules/updates/statemachine/UpdatesStateMachine;", "canRelaunch", "relaunchReactApplication", "", "callback", "Lexpo/modules/updates/launcher/Launcher$LauncherCallback;", "resetSelectionPolicy", "expo-updates_debug"})
public abstract interface UpdatesInterface {
    
    @org.jetbrains.annotations.NotNull
    public abstract expo.modules.updates.UpdatesConfiguration getConfiguration();
    
    @org.jetbrains.annotations.NotNull
    public abstract expo.modules.updates.selectionpolicy.SelectionPolicy getSelectionPolicy();
    
    @org.jetbrains.annotations.Nullable
    public abstract java.io.File getDirectory();
    
    @org.jetbrains.annotations.NotNull
    public abstract expo.modules.updates.db.DatabaseHolder getDatabaseHolder();
    
    @org.jetbrains.annotations.NotNull
    public abstract expo.modules.updates.loader.FileDownloader getFileDownloader();
    
    @org.jetbrains.annotations.Nullable
    public abstract expo.modules.updates.statemachine.UpdatesStateMachine getStateMachine();
    
    public abstract boolean isEmergencyLaunch();
    
    public abstract boolean isEmbeddedLaunch();
    
    public abstract boolean isUsingEmbeddedAssets();
    
    public abstract boolean canRelaunch();
    
    @org.jetbrains.annotations.Nullable
    public abstract expo.modules.updates.db.entity.UpdateEntity getEmbeddedUpdate();
    
    @org.jetbrains.annotations.Nullable
    public abstract expo.modules.updates.db.entity.UpdateEntity getLaunchedUpdate();
    
    @org.jetbrains.annotations.Nullable
    public abstract java.util.Map<expo.modules.updates.db.entity.AssetEntity, java.lang.String> getLocalAssetFiles();
    
    public abstract void relaunchReactApplication(@org.jetbrains.annotations.NotNull
    expo.modules.updates.launcher.Launcher.LauncherCallback callback);
    
    public abstract void resetSelectionPolicy();
}